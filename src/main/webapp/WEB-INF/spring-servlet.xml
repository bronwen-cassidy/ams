<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        ">

	<context:component-scan base-package="com.xioq.dasacumen.web" />

	<mvc:annotation-driven conversion-service="conversionService"/>
    	
	<!-- Internationalization -->
	<!-- This will locate the properties file according to the language -->
	<bean
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource">
		<property name="basename" value="classpath:languages/messages"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>

	<!-- This will trigger when parameter lang is passed -->
	<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
		id="localeChangeInterceptor">
		<property name="paramName" value="lang"></property>
	</bean>

	<!-- This will change the language in the session -->
	<bean class="org.springframework.web.servlet.i18n.SessionLocaleResolver"
		id="localeResolver">
		<property name="defaultLocale" value="en"></property>
	</bean>

	<!-- Allows for multipart file upload -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<property name="maxUploadSize" value="1000000" />
	</bean>

	<!-- defines the interceptors -->
	<mvc:interceptors>
		<ref bean="localeChangeInterceptor" />
	</mvc:interceptors>

	<bean id="contentNegotiatingResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order"
			value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}" />
		<property name="favorPathExtension" value="true" />
		<property name="contentNegotiationManager">
			<bean class="org.springframework.web.accept.ContentNegotiationManager">
				<constructor-arg>
					<bean
						class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<constructor-arg>
							<map>
								<entry key="html" value="text/html" />
								<entry key="pdf" value="application/pdf" />
								<entry key="xsl" value="application/vnd.ms-excel" />
								<entry key="xml" value="application/xml" />
								<entry key="json" value="application/json" />
								<entry key="atom" value="application/xml" />
							</map>
						</constructor-arg>
					</bean>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/jsp/**/tiles-*.xml</value>
			</list>
		</property>
	</bean>

	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="0" />
	</bean>
	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver"> 
		<property name="basename" value="views"/> <property name="order" value="1" 
		/> </bean> -->

	<!-- A simple view resolver which saves have the full path to the JSPs in 
		the controllers -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>