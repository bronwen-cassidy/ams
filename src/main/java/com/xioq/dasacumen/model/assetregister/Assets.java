package com.xioq.dasacumen.model.assetregister;

// Generated 06-May-2014 10:03:55 by Hibernate Tools 4.0.0


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.codehaus.jackson.annotate.JsonIgnore;
import org.hibernate.annotations.Proxy;

import com.xioq.dasacumen.lib.annotations.Draggable;
import com.xioq.dasacumen.lib.annotations.Droppable;
import com.xioq.dasacumen.lib.annotations.DroppableModel;
import com.xioq.dasacumen.lib.model.VersionControlled;
import com.xioq.dasacumen.lib.utilities.UidModel;
import com.xioq.dasacumen.model.Group;
import com.xioq.dasacumen.model.GroupAsset;
import com.xioq.dasacumen.model.ScratchpadDraggable;
import com.xioq.dasacumen.model.common.AssetInsuranceType;
import com.xioq.dasacumen.model.common.AssetWarranty;
import com.xioq.dasacumen.model.common.LeaseIn;
import com.xioq.dasacumen.model.common.LeaseOut;
import com.xioq.dasacumen.model.common.OtherSystemRef;
import com.xioq.dasacumen.model.common.Party;
import com.xioq.dasacumen.model.common.UserDataSets;
import com.xioq.dasacumen.model.constants.EntityType;
import com.xioq.dasacumen.model.systemadmin.UserData;

/**
 * Assets generated by hbm2java
 */
@Entity
@Proxy(lazy=false)
@Table(name = "assets")
@DroppableModel("asset")
@Draggable(names={"assetDraggable"})
public class Assets extends VersionControlled implements UidModel, java.io.Serializable, ScratchpadDraggable, Cloneable {

	/** By default everything is lazy loaded. This is the full list of asset dependencies to load eagerly if
	 * everything is required. Note this should ONLY be used when editing an asset.
	 */
	public static final String[] ALL_EAGER = {"otherSystemRefs", "assetInsuranceTypes", 
		"warranties", "groups", "assetSchedule", "assetProposal"};
	/** Defines the parts of an asset needed for the search results. */
	public static final String[] ASSET_SEARCH_EAGER = {"otherSystemRefs", "leaseIn", "leaseOut", "assetInsuranceTypes", 
		"warranties", "groups", "assetSchedule", "assetProposal"};
	
	@Id
	@SequenceGenerator(allocationSize=1, initialValue=0, sequenceName="assets_id_seq", name="assets_id_seq")
	@GeneratedValue(generator="assets_id_seq", strategy=GenerationType.SEQUENCE)
	private Long id;
	
	@Column(name="country_id")
	private Long countryId;
	@ManyToOne()
    @JoinColumn(name="country_id", insertable=false, updatable=false, nullable=false)
	private UserData country;
	
	@Column(name="company_id")
	private Long companyId;
	@ManyToOne()
    @JoinColumn(name="company_id",insertable=false,updatable=false, nullable=false)
	private UserData company;
	
	@Column(name="department_id")
	private Long departmentId;
	@ManyToOne()
    @JoinColumn(name="department_id",insertable=false,updatable=false, nullable=false)
	private UserData department;
	
	@Column(name = "division_id")
	private Long divisionId;
	@ManyToOne(cascade = {CascadeType.ALL})
    @JoinColumn(name="division_id",insertable=false,updatable=false)
	private UserData division;
	
	@Column(name = "site_id")
	private Long siteId;
	@ManyToOne(cascade = {CascadeType.ALL})
    @JoinColumn(name="site_id",insertable=false,updatable=false)
	private UserData site;
	
	@Column(name = "location_id")
	private Long locationId;
	@ManyToOne(cascade = {CascadeType.ALL})
    @JoinColumn(name="location_id",insertable=false,updatable=false)
	private UserData location;
	
	@Column(name="manufacturer_id")
	private Long manufacturerId;
	
	@ManyToOne(cascade = {CascadeType.ALL})
    @JoinColumn(name="manufacturer_id",insertable=false,updatable=false)
	private Party manufacturer;
	
	@Transient // fake field to allow getting at the party name for draggables.
	@Droppable(accepts="supplierDraggable", fieldToCopy="name")
	private String supplierName;
	@Droppable(accepts="supplierDraggable", fieldToCopy="id")
	@Column(name="supplier_id")
	private Long supplierId;
	@ManyToOne()
    @JoinColumn(name="supplier_id", insertable=false, updatable=false, nullable=false)
	private Party supplier;
	
	
	@Transient
	private String docFile;//TODO cannot find the mapping for the docFile.
	
	// XXX Only done to allow assets to accept the client draggable which is needed for the embedded tenures lease out
	@Droppable(accepts="clientDraggable", fieldToCopy="name")
	@Transient
	private String fakeField;
	
	@Transient
	@Droppable(accepts="custodianDraggable", fieldToCopy="name")
	private String custodianName;
	
	@Droppable(accepts="custodianDraggable", fieldToCopy="id")
	@Column(name="custodian_id")
	private Long custodianId;
	@ManyToOne()
    @JoinColumn(name="custodian_id",insertable=false,updatable=false, nullable=false)
	private Party custodian;
	
	@Droppable(accepts="assetDraggable", fieldToCopy="categoryId")
	@Draggable(names={"assetDraggable"})
	@Column(name = "category_id")
	private Long categoryId;
	@ManyToOne(cascade = {CascadeType.ALL})
    @JoinColumn(name="category_id",insertable=false,updatable=false,nullable=false)
	private UserData category;
	
	@Droppable(accepts="assetDraggable", fieldToCopy="assetStatusId")
	@Draggable
	@Column(name = "asset_status_id")
	private Long assetStatusId;
	@ManyToOne(cascade = {CascadeType.ALL})
    @JoinColumn(name="asset_status_id", insertable=false, updatable=false, nullable=false)
	private UserData assetStatus;

	@Droppable(accepts="assetDraggable", fieldToCopy="assetNumberPart1Id")
	@Draggable
	@Column(name = "asset_number_part_1_id")
	private Long assetNumberPart1Id;
	@ManyToOne()
    @JoinColumn(name="asset_number_part_1_id",insertable=false,updatable=false)
	private UserData assetNumberPart1;
	
	@Droppable(accepts="assetDraggable", fieldToCopy="assetNumberPart2Id")
	@Draggable
	@Column(name = "asset_number_part_2_id")
	private Long assetNumberPart2Id;
	@ManyToOne()
    @JoinColumn(name="asset_number_part_2_id",insertable=false,updatable=false)
	private UserData assetNumberPart2;
	
	@Droppable(accepts="assetDraggable", fieldToCopy="assetNumberPart3Id")
	@Draggable
	@Column(name="asset_number_part_3_id")// Change in db then delete
	private Long assetNumberPart3Id;
	@ManyToOne()
    @JoinColumn(name="asset_number_part_3_id",insertable=false,updatable=false)
	private UserData assetNumberPart3;
	
	@Column(name = "asset_number_part_4")
	private Integer assetNumberPart4;
	
	@Transient
	private String assetNumber;

	private String uid;
	
	@Droppable(accepts="assetDraggable", fieldToCopy="name")  // Deep is on all always for now
	@Draggable
	private String name;
	private String description;
	private String serialNumber;
	private String supplierPn;
	private String manufacturerPn;
	@Column(name="is_a_facility")
	private Boolean isAFacility;
	private Boolean isEquipment; 
	private Boolean isPart;
	private Boolean criticalAsset;
	private Boolean partOfGroup;
	private Boolean parts;
	private Boolean riskAssessment;
	private Boolean bcp;
	private Boolean trackingDevice;
	
	// Finance fields
	@Column(name="purchase_price", precision=131089, scale=0) //TODO precision found on the mapping file at the moment not sure what it does. hibernate mapping file generated 
	private BigDecimal purchasePrice;
	@Column(name="cost", precision=131089, scale=0) //TODO make sure the test pass before removing. precision found on the mapping file at the moment not sure what it does.
	private BigDecimal cost;
	//TODO
	@Column(name="vat_code")
	private Long vatCodeId; //XXX need to add to jira, Jira number ....
	@ManyToOne()
    @JoinColumn(name="vat_code",updatable = false, insertable=false)
	private UserData vatCode; //XXX 
	private Date dateOfPurchase;
	private Integer purchaseLeadTime;
	@Column(name="budget_limit", precision=131089, scale=0)
	private BigDecimal budgetLimit;
	// Finance - Commissioning
	private Date installationDate;
	private Date commissioningDate;
	private Date decommissioningDate;
	private Date endOfLifeDate;
	private Integer lifeExpectancy;
	// Finance - Depreciation
	@Column(name="depreciation_code") // May need to rename
	private Long depreciationCodeId; // XXX need to add to jira, Jira number .... 
	@ManyToOne(cascade = {CascadeType.ALL})
    @JoinColumn(name="depreciation_code",updatable = false, insertable=false)
	private UserData depreciationCode;
	// TODO check if a column is needed for currentDepreciatedValue,
	@Transient
	private BigDecimal currentDepreciatedValue;
	
	@Column(name="predicted_end_of_life_value")
	private BigDecimal predictedEndOfLifeValue;
	
	@Transient //XXX Not in tables, unsure why its used, might be transient might not be 
	private Long draftId;
	
	/*
	 * @JoinColumn is on the corresponding entity table, see here: 
	 * http://stackoverflow.com/questions/11938253/jpa-joincolumn-vs-mappedby
	 */
	@OneToMany(mappedBy = "parentAsset")
	private Set<AssetParts> assetPartsesForAssetsParentId = new HashSet<AssetParts>(0);
	
	@OneToMany(mappedBy = "childAsset")
	private Set<AssetParts> assetPartsesForAssetsChildId = new HashSet<AssetParts>(0);
	
	@OneToMany(cascade=CascadeType.ALL, mappedBy = "assets")
	private Set<OtherSystemRef> otherSystemRefs = new HashSet<OtherSystemRef>(0);
	
	@OneToMany(mappedBy = "assets")
	private Set<UserDataSets> userDataSetses = new HashSet<UserDataSets>(0);
	
	@OneToOne(cascade = {CascadeType.ALL}, orphanRemoval=true, mappedBy="asset", fetch=FetchType.LAZY)
	private LeaseIn leaseIn;
	
	@OneToOne(cascade = {CascadeType.ALL}, orphanRemoval=true, mappedBy="asset")
	private LeaseOut leaseOut;
	
	@OneToMany(mappedBy = "asset", orphanRemoval=true, cascade={CascadeType.ALL})
	private Set<AssetInsuranceType> assetInsuranceTypes = new HashSet<AssetInsuranceType>(0);

	@OneToMany(mappedBy = "asset", orphanRemoval=true, cascade={CascadeType.ALL})
	private Set<AssetWarranty> warranties= new HashSet<AssetWarranty>(0);
	
	@OneToOne(cascade = {CascadeType.ALL}, mappedBy="asset")
	private Maintenance maintenance;
	
	@OneToMany(mappedBy = "groupAssets", orphanRemoval=true, cascade={CascadeType.ALL})
	private Set<Group> groups = new HashSet<Group>(0);

	@OneToMany(orphanRemoval=true, mappedBy = "asset")
	private Set<AssetSchedule> assetSchedule = new HashSet<AssetSchedule>(0);
	
	@OneToMany(orphanRemoval=true, mappedBy = "asset")
	private Set<AssetProposal> assetProposal = new HashSet<AssetProposal>(0);
	
//	private Set<UserDataSets> industries = new HashSet<UserDataSets>(0);
//	private Set<UserDataSets> disciplines = new HashSet<UserDataSets>(0);
//	private Set<UserDataSets> coreSkills = new HashSet<UserDataSets>(0);
	//TODO
	/** Mapped but never loaded as only used for searching */
	@OneToMany(orphanRemoval = true, cascade = {CascadeType.ALL})
	@JoinColumn(name = "assets_id") // backref column to owner in GroupTest (unidir/bidir)
	private Set<GroupAsset> groupAssets = new HashSet<GroupAsset>(0);
	
	//Used to create a clone of the Assets object copying the below fields to the new cloned object.
	public Object clone() {
        
        Assets obj = new Assets();
        obj.setName(this.name);
        obj.setDescription(this.description);
        obj.setAssetStatusId(this.assetStatusId);
        obj.setSupplierId(this.supplierId);
        obj.setCustodianId(this.custodianId);
        obj.setAssetNumberPart1Id(this.assetNumberPart1Id);
        obj.setAssetNumberPart2Id(this.assetNumberPart2Id);        
        obj.setAssetNumberPart3Id(this.assetNumberPart3Id);
        //obj.setAssetNumberPart4Id(this.assassetNumberPart4Id);
        obj.setSiteId(this.siteId);
        obj.setLocationId(this.locationId);
        obj.setDivisionId(this.divisionId);
        obj.setDepartmentId(this.departmentId);
        obj.setDepreciationCodeId(this.depreciationCodeId);
        obj.setCompanyId(this.companyId);
        obj.setCountryId(this.countryId);
        obj.setCategoryId(this.categoryId);
        obj.setUid(this.uid);
        obj.setTenantId(1); //@TODO XXX : replace one tenant func properly implemented.
        obj.setCriticalAsset(this.criticalAsset);
        return obj;
    }
	
	
	public Assets() {
	}

	public Assets(Long id, String uid,
			String name, String assetNumber, Integer tenantId) {
		this.id = id;
		this.uid = uid;
		this.name = name;
		this.assetNumber = assetNumber;
		setTenantId(tenantId);
	}
	

	/**
	 * Minimum required fields for an asset to be made.
	 */
	public Assets(String name, UserData country, Long companyId,
			UserData department, UserData division, UserData site,
			UserData location, UserData depreciationCode, Party manufacturer,
			Party supplier, UserData category, UserData assetStatus,
			UserData assetNumberPart1, UserData assetNumberPart2,
			UserData assetNumberPart3, int tenantId) {
		super();
		this.name = name;
		this.country = country;
		this.companyId = companyId;
		this.department = department;
		this.division = division;
		this.site = site;
		this.location = location;
		this.depreciationCode = depreciationCode;
		this.manufacturer = manufacturer;
		this.supplier = supplier;
		this.category = category;
		this.assetStatus = assetStatus;
		this.assetNumberPart1 = assetNumberPart1;
		this.assetNumberPart2 = assetNumberPart2;
		this.assetNumberPart3 = assetNumberPart3;
		setTenantId(tenantId);
	}

	/**
	 * 	 * Minimum required fields for an asset to be made with only Ids
	 */
	public Assets(String name, Long countryId, Long companyId, Long departmentId,
			Long divisionId, Long siteId, Long locationId, Long manufacturerId,
			Long supplierId, Long custodianId, Long categoryId,
			Long assetStatusId, Long assetNumberPart1Id,
			Long assetNumberPart2Id, Long assetNumberPart3Id) {
		super();
		this.name = name;
		this.countryId = countryId;
		this.companyId = companyId;
		this.departmentId = departmentId;
		this.divisionId = divisionId;
		this.siteId = siteId;
		this.locationId = locationId;
		this.manufacturerId = manufacturerId;
		this.supplierId = supplierId;
		this.custodianId = custodianId;
		this.categoryId = categoryId;
		this.assetStatusId = assetStatusId;
		this.assetNumberPart1Id = assetNumberPart1Id;
		this.assetNumberPart2Id = assetNumberPart2Id;
		this.assetNumberPart3Id = assetNumberPart3Id;
	}

	/**
	 * @return the assetInsuranceTypes
	 */
	public Set<AssetInsuranceType> getAssetInsuranceTypes() {
		return assetInsuranceTypes;
	}

	/**
	 * @param assetInsuranceTypes the assetInsuranceTypes to set
	 */
	public void setAssetInsuranceTypes(Set<AssetInsuranceType> assetInsuranceTypes) {
		this.assetInsuranceTypes = assetInsuranceTypes;
	}

	@Override
	public String getUid()
	{
		return this.uid;
	}
	
	private void setUid(String uid)
	{
		this.uid = uid;
	}
	
	@Override
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	
	@Override
	public EntityType getModelType()
	{
		return EntityType.ASSETS;
	}
	
	@Override
	public Set<String> getDraggableNames()
	{
		Set<String> dragNames = new HashSet<String>();
		dragNames.add("assetDraggable");
		return dragNames;
	}
	
	@Override
	@JsonIgnore
	public String getDisplayName()
	{
		return getName();
	}
	
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	public String getDescription() {
		return this.description;
	}
	public void setDescription(String description) {
		this.description = description;
	}

	@JsonIgnore
	public String getAssetNumber() 
	{
		UserData part1 = getAssetNumberPart1();
		UserData part2 = getAssetNumberPart2();
		UserData part3 = getAssetNumberPart3();
		Integer part4 = getAssetNumberPart4();
		
		StringBuilder assNum = new StringBuilder();
		if(null != part1)
		{
			assNum.append(part1.getName());
			assNum.append(".");
		}
		if(null != part2)
		{
			assNum.append(part2.getName());
			assNum.append(".");
		}
		if(null != part3)
		{
			assNum.append(part3.getName());
			assNum.append(".");
		}
		if(null != part4)
			assNum.append(part4);
		
		return assNum.toString();
	}

	public void setAssetNumber(String assetNumber) 
	{
		// Does nothing as the asset number is made from its parts
	}

	public String getSerialNumber() {
		return this.serialNumber;
	}

	public void setSerialNumber(String serialNumber) {
		this.serialNumber = serialNumber;
	}

	public String getSupplierPn() {
		return this.supplierPn;
	}

	public void setSupplierPn(String supplierPn) {
		this.supplierPn = supplierPn;
	}

	public String getManufacturerPn() {
		return this.manufacturerPn;
	}

	public void setManufacturerPn(String manufacturerPn) {
		this.manufacturerPn = manufacturerPn;
	}

	public Boolean getIsAFacility() {
		return this.isAFacility;
	}

	public void setIsAFacility(Boolean isAFacility) {
		this.isAFacility = isAFacility;
	}
	
	public Boolean getIsEquipment() {
		return this.isEquipment;
	}

	public void setIsEquipment(Boolean isEquipment) {
		this.isEquipment = isEquipment;
	}

	public Boolean getIsPart() {
		return this.isPart;
	}

	public void setIsPart(Boolean isPart) {
		this.isPart = isPart;
	}

	public Boolean getCriticalAsset() {
		return this.criticalAsset;
	}

	public void setCriticalAsset(Boolean criticalAsset) {
		this.criticalAsset = criticalAsset;
	}

	public Boolean getPartOfGroup() {
		return this.partOfGroup;
	}

	public void setPartOfGroup(Boolean partOfGroup) {
		this.partOfGroup = partOfGroup;
	}

	public Boolean getParts() {
		return this.parts;
	}

	public void setParts(Boolean parts) {
		this.parts = parts;
	}

	public Boolean getRiskAssessment() {
		return this.riskAssessment;
	}

	public void setRiskAssessment(Boolean riskAssessment) {
		this.riskAssessment = riskAssessment;
	}

	public Boolean getBcp() {
		return this.bcp;
	}

	public void setBcp(Boolean bcp) {
		this.bcp = bcp;
	}

	/**
	 * @return the trackingDevice
	 */
	public Boolean getTrackingDevice() {
		return trackingDevice;
	}

	/**
	 * @param trackingDevice the trackingDevice to set
	 */
	public void setTrackingDevice(Boolean trackingDevice) {
		this.trackingDevice = trackingDevice;
	}

	public BigDecimal getPurchasePrice() {
		return this.purchasePrice;
	}

	public void setPurchasePrice(BigDecimal purchasePrice) {
		this.purchasePrice = purchasePrice;
	}

	public BigDecimal getCost()
	{
		return cost;
	}

	public void setCost(BigDecimal cost)
	{
		this.cost = cost;
	}

	public UserData getVatCode() {
		return this.vatCode;
	}

	public void setVatCode(UserData vatCode) {
		this.vatCode = vatCode;
	}

	public Long getVatCodeId() {
		return vatCodeId;
	}

	public void setVatCodeId(Long vatCodeId) {
		this.vatCodeId = vatCodeId;
	}

	public Date getDateOfPurchase() {
		return this.dateOfPurchase;
	}

	public void setDateOfPurchase(Date dateOfPurchase) {
		this.dateOfPurchase = dateOfPurchase;
	}

	public Date getInstallationDate() {
		return this.installationDate;
	}

	public void setInstallationDate(Date installationDate) {
		this.installationDate = installationDate;
	}

	public Date getCommissioningDate() {
		return this.commissioningDate;
	}

	public void setCommissioningDate(Date commissioningDate) {
		this.commissioningDate = commissioningDate;
	}

	public Date getDecommissioningDate() {
		return this.decommissioningDate;
	}

	public void setDecommissioningDate(Date decommissioningDate) {
		this.decommissioningDate = decommissioningDate;
	}

	public Date getEndOfLifeDate() {
		return this.endOfLifeDate;
	}

	public void setEndOfLifeDate(Date endOfLifeDate) {
		this.endOfLifeDate = endOfLifeDate;
	}

	public Integer getLifeExpectancy() {
		return this.lifeExpectancy;
	}

	public void setLifeExpectancy(Integer lifeExpectancy) {
		this.lifeExpectancy = lifeExpectancy;
	}

	public Integer getPurchaseLeadTime() {
		return this.purchaseLeadTime;
	}

	public void setPurchaseLeadTime(Integer purchaseLeadTime) {
		this.purchaseLeadTime = purchaseLeadTime;
	}

	public BigDecimal getPredictedEndOfLifeValue() {
		return predictedEndOfLifeValue;
	}

	public void setPredictedEndOfLifeValue(BigDecimal predictedEndOfLifeValue) {
		this.predictedEndOfLifeValue = predictedEndOfLifeValue;
	}

	public BigDecimal getBudgetLimit() {
		return this.budgetLimit;
	}

	public void setBudgetLimit(BigDecimal budgetLimit) {
		this.budgetLimit = budgetLimit;
	}


	public Set<AssetParts> getAssetPartsesForAssetsParentId() {
		return this.assetPartsesForAssetsParentId;
	}

	public void setAssetPartsesForAssetsParentId(
			Set<AssetParts> assetPartsesForAssetsParentId) {
		this.assetPartsesForAssetsParentId = assetPartsesForAssetsParentId;
	}

	public Set<AssetParts> getAssetPartsesForAssetsChildId() {
		return this.assetPartsesForAssetsChildId;
	}

	public void setAssetPartsesForAssetsChildId(
			Set<AssetParts> assetPartsesForAssetsChildId) {
		this.assetPartsesForAssetsChildId = assetPartsesForAssetsChildId;
	}

	public Set<OtherSystemRef> getOtherSystemRefs() {
		return this.otherSystemRefs;
	}
	
	public void setOtherSystemRefs(Set<OtherSystemRef> otherSystemRefs) {
		this.otherSystemRefs = otherSystemRefs;
	}
	
	public void addOtherSystemRef(OtherSystemRef otherSystemRef)
	{
		otherSystemRef.setAssets(this);
		this.otherSystemRefs.add(otherSystemRef);
	}
	
	public OtherSystemRef getOtherSystemRef()
	{
		if(null == this.otherSystemRefs)
			return null;
		
		for (OtherSystemRef aOtherSystemRef: this.otherSystemRefs)
		{
			if(true)
			{
				return aOtherSystemRef;
			}
		}
		return null;
	}
	
	public void setOtherSystemRef(OtherSystemRef theOtherSystemRef)
	{
		Set<OtherSystemRef> tmp = getOtherSystemRefs();
		if(null == tmp)
		{
			tmp = new HashSet<OtherSystemRef>();
			setOtherSystemRefs(tmp);
		}
		if (theOtherSystemRef != null) {
			theOtherSystemRef.setAssets(this);
			tmp.add(theOtherSystemRef);
		}
	}
	
	public Set<UserDataSets> getUserDataSetses() {
		return this.userDataSetses;
	}

	public void setUserDataSetses(Set<UserDataSets> userDataSetses) {
		this.userDataSetses = userDataSetses;
	}
	

	public String[] getAssetNumberAsArray()
	{
		//return getAssetNumber().split(".");

		if(assetNumber == null) 
			return new String[4];
		
		return assetNumber.split(".");
	}
	
	public void setAssetNumberAsArray(String[] assetNumber)
	{
		if (assetNumber == null || assetNumber.length != 4) 
			this.assetNumber = null;
		else
			this.assetNumber = assetNumber[0] + "." + assetNumber[1] + "." + assetNumber[2] + "." + assetNumber[3];
	}
	public Long getCountryId()
	{
		return countryId;
	}
	public void setCountryId(Long countryId)
	{
		this.countryId = countryId;
	}
	public UserData getCountry()
	{
		return country;
	}
	public void setCountry(UserData Country)
	{
		this.country = Country;
	}

	public Long getCompanyId()
	{
		return companyId;
	}
	public void setCompanyId(Long companyId)
	{
		this.companyId = companyId;
	}
	public UserData getCompany()
	{
		return company;
	}
	public void setCompany(UserData company)
	{
		this.company = company;
	}

	public Long getDepartmentId()
	{
		return departmentId;
	}
	public void setDepartmentId(Long departmentId)
	{
		this.departmentId = departmentId;
	}
	public UserData getDepartment()
	{
		return department;
	}
	public void setDepartment(UserData Department)
	{
		this.department = Department;
	}

	public Long getDivisionId()
	{
		return divisionId;
	}
	public void setDivisionId(Long divisionId)
	{
		this.divisionId = divisionId;
	}
	public UserData getDivision()
	{
		return division;
	}
	public void setDivision(UserData Division)
	{
		this.division = Division;
	}

	public Long getLocationId()
	{
		return locationId;
	}
	public void setLocationId(Long locationId)
	{
		this.locationId = locationId;
	}
	public UserData getLocation()
	{
		return location;
	}
	public void setLocation(UserData Location)
	{
		this.location = Location;
	}

	public Long getDepreciationCodeId()
	{
		return depreciationCodeId;
	}
	public void setDepreciationCodeId(Long depreciationCodeId)
	{
		this.depreciationCodeId = depreciationCodeId;
	}
	public UserData getDepreciationCode()
	{
		return depreciationCode;
	}
	public void setDepreciationCode(UserData DepreciationCode)
	{
		this.depreciationCode = DepreciationCode;
	}
	
	public Long getAssetStatusId()
	{
		return assetStatusId;
	}
	public void setAssetStatusId(Long assetStatusId)
	{
		this.assetStatusId = assetStatusId;
	}
	public UserData getAssetStatus() {
		return this.assetStatus;
	}

	public void setAssetStatus(UserData AssetStatus) {
		this.assetStatus = AssetStatus;
	}

	public Long getManufacturerId()
	{
		return manufacturerId;
	}
	public void setManufacturerId(Long manufacturerId)
	{
		this.manufacturerId = manufacturerId;
	}
	public Party getManufacturer()
	{
		return manufacturer;
	}

	public void setManufacturer(Party partiesByManufacturerId)
	{
		this.manufacturer = partiesByManufacturerId;
	}

	public Long getSupplierId()
	{
		return supplierId;
	}
	public void setSupplierId(Long supplierId)
	{
		this.supplierId = supplierId;
	}
	public Party getSupplier()
	{
		return supplier;
	}
	public void setSupplier(Party supplier)
	{
		this.supplier = supplier;
	}
	@Droppable(accepts="supplierDraggable", fieldToCopy="name") // , deepFields={"supplierId"} Deep is an all always for now
	public String getSupplierName()
	{
		return null == supplier ? null : supplier.getName();
	}
	public void setSupplierName(String supplierName)
	{
		// Not used. Only the supplier ID is ever set.
	}

	public Long getCustodianId()
	{
		return custodianId;
	}
	public void setCustodianId(Long custodianId)
	{
		this.custodianId = custodianId;
	}
	public String getCustodianName()
	{
		return custodianName;
	}
	public void setCustodianName(String custodianName)
	{
		this.custodianName = custodianName;
	}
	public Party getCustodian()
	{
		return custodian;
	}

	public void setCustodian(Party partiesByCustodianId)
	{
		this.custodian = partiesByCustodianId;
	}

	public Long getCategoryId()
	{
		return categoryId;
	}
	public void setCategoryId(Long categoryId)
	{
		this.categoryId = categoryId;
	}
	public UserData getCategory()
	{
		return category;
	}

	public void setCategory(UserData category)
	{
		this.category = category;
	}

	public Long getSiteId()
	{
		return siteId;
	}
	public void setSiteId(Long siteId)
	{
		this.siteId = siteId;
	}
	public UserData getSite()
	{
		return site;
	}
	public void setSite(UserData Site)
	{
		this.site = Site;
	}
	
	public Long getAssetNumberPart1Id()
	{
		return assetNumberPart1Id;
	}

	public void setAssetNumberPart1Id(Long assetNumberPart1Id)
	{
		this.assetNumberPart1Id = assetNumberPart1Id;
	}
	
	public UserData getAssetNumberPart1()
	{
		return assetNumberPart1;
	}

	public void setAssetNumberPart1(UserData AssetNumberPart1)
	{
		this.assetNumberPart1 = AssetNumberPart1;
	}
	
	public Long getAssetNumberPart2Id()
	{
		return assetNumberPart2Id;
	}

	public void setAssetNumberPart2Id(Long assetNumberPart2Id)
	{
		this.assetNumberPart2Id = assetNumberPart2Id;
	}

	public UserData getAssetNumberPart2()
	{
		return assetNumberPart2;
	}

	public void setAssetNumberPart2(UserData AssetNumberPart2)
	{
		this.assetNumberPart2 = AssetNumberPart2;
	}

	public Long getAssetNumberPart3Id()
	{
		return assetNumberPart3Id;
	}

	public void setAssetNumberPart3Id(Long assetNumberPart3Id)
	{
		this.assetNumberPart3Id = assetNumberPart3Id;
	}

	public UserData getAssetNumberPart3()
	{
		return assetNumberPart3;
	}

	public void setAssetNumberPart3(UserData AssetNumberPart3)
	{
		this.assetNumberPart3 = AssetNumberPart3;
	}

	public Integer getAssetNumberPart4()
	{
		return assetNumberPart4;
	}

	public void setAssetNumberPart4(Integer assetNumberPart4)
	{
		this.assetNumberPart4 = assetNumberPart4;
	}

	public Long getDraftId() {
		return draftId;
	}

	public void setDraftId(Long draftId) {
		this.draftId = draftId;
	}

//	public Set<Tenure> getTenures()
//	{
//		return tenures;
//	}
//
//	public void setTenures(Set<Tenure> tenures)
//	{
//		this.tenures = tenures;
//		if(null != tenures)
//		{
//			/*
//			 * Set the asset back on the tenure when
//			 * setting the set of tenures - this is needed as there is a JSON
//			 * ignore on the asset within tenure, so when loading back from
//			 * drafts it is null.
//			 */
//			for (Tenure tenure : tenures)
//			{
//				tenure.setAsset(this);
//			}
//		}
//	}
	
//	@JsonIgnore
//	public Tenure getLeaseIn()
//	{
//		if(null == this.tenures)
//			return null;
//		
//		for (Tenure aTenure : this.tenures)
//		{
//			if(LeaseType.LEASE_IN.equals(aTenure.getLeaseInOut()))
//			{
//				return aTenure;
//			}
//		}
//		return null;
//	}
//	
//	public void setLeaseIn(Tenure leaseInTenure)
//	{
//		Set<Tenure> tmp = getTenures();
//		if(null == tmp)
//		{
//			tmp = new HashSet<Tenure>();
//			setTenures(tmp);
//		}
//		if(leaseInTenure != null)
//		{
//			leaseInTenure.setLeaseInOut(LeaseType.LEASE_IN);
//			leaseInTenure.setAsset(this);
//			tmp.add(leaseInTenure);
//		}
//	}
//	@JsonIgnore
//	public Tenure getLeaseOut()
//	{
//		if(null == this.tenures)
//			return null;
//		
//		for (Tenure aTenure : this.tenures)
//		{
//			if(LeaseType.LEASE_OUT.equals(aTenure.getLeaseInOut()))
//			{
//				return aTenure;
//			}
//		}
//		return null;
//	}
//	
//	public void setLeaseOut(Tenure leaseOutTenure)
//	{
//		Set<Tenure> tmp = getTenures();
//		if(null == tmp)
//		{
//			tmp = new HashSet<Tenure>();
//			setTenures(tmp);
//		}
//		if(null != leaseOutTenure)
//		{
//			leaseOutTenure.setLeaseInOut(LeaseType.LEASE_OUT);
//			leaseOutTenure.setAsset(this);
//			tmp.add(leaseOutTenure);
//		}
//	}
	
	public LeaseIn getLeaseIn()
	{
		return leaseIn;
	}


	public void setLeaseIn(LeaseIn leaseIn)
	{
		this.leaseIn = leaseIn;
		if(null != leaseIn)
		{
			leaseIn.setAsset(this);
		}
	}


	public LeaseOut getLeaseOut()
	{
		return leaseOut;
	}


	public void setLeaseOut(LeaseOut leaseOut)
	{
		this.leaseOut = leaseOut;
		if(null != leaseOut)
		{
			leaseOut.setAsset(this);
		}
	}


	/**
	 * @return the warranties
	 */
	public Set<AssetWarranty> getWarranties() {
		return warranties;
	}


	/**
	 * @param warranties the warranties to set
	 */
	public void setWarranties(Set<AssetWarranty> warranties) {
		this.warranties = warranties;
	}
	
	public AssetWarranty getWarranty()
	{
		if(null == this.warranties)
			return null;
		
		for (AssetWarranty aWarranty: this.warranties)
		{
			if(true)
			{
				return aWarranty;
			}
		}
		return null;
	}
	
	public void setWarranty(AssetWarranty theWarranty)
	{
		Set<AssetWarranty> tmp = getWarranties();
		if(null == tmp)
		{
			tmp = new HashSet<AssetWarranty>();
			setWarranties(tmp);
		}
		if (theWarranty != null) {
			theWarranty.setAsset(this);
			tmp.add(theWarranty);
		}
	}

	public Maintenance getMaintenance()
	{
		return maintenance;
	}

	public void setMaintenance(Maintenance maintenance)
	{
		this.maintenance = maintenance;
	}

	public AssetInsuranceType getAssetInsurance()
	{
		if(null == this.assetInsuranceTypes)
			return null;

		for (AssetInsuranceType aAssetInsuranceType : this.assetInsuranceTypes)
		{
			if(true)
			{
				//Possibly set insuranceTypePolicyLink.insurancePolicy on to aAssetInsuranceType.setInsuranceTypePolicyLinks!!!!
				return aAssetInsuranceType;
			}
		}
		return null;
	}
	
	public void setAssetInsurance(AssetInsuranceType assetInsuranceType)
	{
		Set<AssetInsuranceType> tmp = getAssetInsuranceTypes();
		if(null == tmp)
		{
			tmp = new HashSet<AssetInsuranceType>();
			setAssetInsuranceTypes(tmp);
		}
		if (assetInsuranceType != null) {
			assetInsuranceType.setAsset(this);
			tmp.add(assetInsuranceType);
		}
	}
	
	private Set<GroupAsset> getGroupAssets() {
		return groupAssets;
	}

	private void setGroupAssets(Set<GroupAsset> groupAssets) {
		this.groupAssets = groupAssets;
	}

	public String getDocFile() {
		return docFile;
	}

	public void setDocFile(String docFile) {
		this.docFile = docFile;
	}

	public BigDecimal getCurrentDepreciatedValue() {
		return currentDepreciatedValue;
	}

	public void setCurrentDepreciatedValue(BigDecimal currentDepreciatedValue) {
		this.currentDepreciatedValue = currentDepreciatedValue;
	}

	public Set<Group> getGroups()
	{
		return groups;
	}

	public void setGroups(Set<Group> groups)
	{
		this.groups = groups;
	}


	public Set<AssetSchedule> getAssetSchedule() {
		return assetSchedule;
	}


	public void setAssetSchedule(Set<AssetSchedule> assetSchedule) {
		this.assetSchedule = assetSchedule;
	}
	
	public void addAssetSchedule(AssetSchedule assetSchedule)
	{
		assetSchedule.setAssets(this);
		this.assetSchedule.add(assetSchedule);
	}


	public Set<AssetProposal> getAssetProposal() {
		return assetProposal;
	}

	public void setAssetProposal(Set<AssetProposal> assetProposal) {
		this.assetProposal = assetProposal;
	}
	
}
