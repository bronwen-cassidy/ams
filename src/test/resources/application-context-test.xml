<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- Could import here rather than refer all files in web.xml
	<import resource="services.xml"/>
    <import resource="resources/messageSource.xml"/>
    <import resource="/resources/themeSource.xml"/>
	classpath:/spring/config-ds.xml
        	classpath:/spring/config-hibernate.xml
	 -->
	 <!-- spring xml to serialize POJO in jackson. -->
	<mvc:annotation-driven />
	
	
	<!-- Scan for spring annotated components -->
	<context:component-scan base-package="com.xioq.dasacumen"/>
	
	<bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/DAS_Acumen_Test" />
		<property name="username" value="das" />
		<property name="password" value="das" />
	</bean>
	
	<bean name="testUtils" class="com.xioq.dasacumen.test.TestUtil">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean name="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.xioq.dasacumen.model"/>
		<property name="namingStrategy" >
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy"/>
		</property>
		
		<property name="entityInterceptor" ref="hibernateAuditTrailInterceptor"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
				<prop key="hibernate.default_schema">acumen</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
			</props>
		</property>
	</bean>
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- Process annotations on registered beans like @Autowired... -->
	<context:annotation-config/>
	
	<!-- These two beans are just to configure springtestdbunit with "qualifiedTableNames" which basically
		makes dbunit always use full names for tables eg acumen.assets-->
	<bean id="dbUnitDatabaseConfig" class="com.github.springtestdbunit.bean.DatabaseConfigBean">
    	<property name="qualifiedTableNames" value="true"/>
    	<property name="datatypeFactory" >
    		<bean class="com.xioq.lib.dbunit.BFPostgresqlDataTypeFactory"/>
    	</property>
	</bean>
	<bean id="dbUnitDatabaseConnection" class="com.github.springtestdbunit.bean.DatabaseDataSourceConnectionFactoryBean">
    	<property name="databaseConfig" ref="dbUnitDatabaseConfig"/>
    	<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com"/>
		<property name="username" value="brightfuturesoftware2@gmail.com"/>
		<property name="password" value="BFuture1"/>
		<property name="javaMailProperties">
			<props>
			    <!-- Use SMTP transport protocol -->
			    <prop key="mail.transport.protocol">smtp</prop>
			    <!-- Use SMTP-AUTH to authenticate to SMTP server -->
			    <prop key="mail.smtp.auth">true</prop>
			    <!-- Use TLS to encrypt communication with SMTP server -->
			    <prop key="mail.smtp.starttls.enable">true</prop>
			    <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
			    <prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="emailService" class="com.xioq.dasacumen.service.EmailService">
		<property name="mailSender" ref="mailSender"/>
	</bean>
</beans>